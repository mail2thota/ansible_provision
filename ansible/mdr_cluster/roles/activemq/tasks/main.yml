#
# Software Copyright BAE Systems plc 2017. All Rights Reserved.
# BAE SYSTEMS, DETICA are trademarks of BAE Systems
# plc and may be registered in certain jurisdictions.
#
---

- name: "determine if to use systemd or not"
  stat:
    path: /etc/systemd
  register: systemd

- debug: var=systemd.stat

- name: "set fact if systemd is available"
  set_fact:
    activemq_systemd: true
  when: systemd.stat.exists

- name: "add activemq group"
  group:
    name: "{{ activemq_group }}"
  tags:
    - init
    - group

- name: "add activemq user"
  user:
    name: "{{ activemq_user }}"
    group: "{{ activemq_group }}"
    home: "{{ activemq_home_dir }}"
    comment: "ActiveMQ service account"
    createhome: no
    state: present
    system: yes
  tags:
    - init
    - user

- name: "create requires directories [home/log etc etc]"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ activemq_user }}"
    group: "{{ activemq_group }}"
  with_items:
  - "{{ activemq_home_dir }}"
  - "{{ activemq_log_dir }}"

- name: "get tarball"
  get_url:
    url: "{{ activemq_url }}"
    dest: "/tmp/apache-activemq-{{ activemq_version }}-bin.tar.gz"
    owner: "{{ activemq_user }}"
    group: "{{ activemq_group }}"
  when: activemq_skip_checksum
  #and activemq_checksum is not defined
  tags:
    - getbin

- name: "extract activemq tarball"
  unarchive:
    src: "/tmp/apache-activemq-{{ activemq_version }}-bin.tar.gz"
    dest: "{{ activemq_install_dir}}"
    list_files: true
    copy: no
    owner: "{{ activemq_user }}"
    group: "{{ activemq_group }}"
    mode: "go-w"

- name: "create symbolic link activemq to /opt/activemq"
  file:
    src: "{{ activemq_install_dir }}/apache-activemq-{{ activemq_version }}"
    dest: "{{ activemq_install_dir }}/activemq"
    state: link
    owner: "{{ activemq_user }}"
    group: "{{ activemq_group }}"
  tags:
    - link

- name: update config
  lineinfile:
    destfile: "{{ activemq_run_dir }}/conf/activemq.xml"
    regexp: '<managementContext createConnector="false"/>'
    line: '<managementContext createConnector="true"/>'

- name: "create init sctipt link file"
  file:
    src: "{{ activemq_install_dir }}/activemq/bin/linux-x86-{{ ansible_userspace_bits }}/activemq"
    dest: "/etc/init.d/activemq"
    owner: root
    group: root
    state: link
  when: activemq_systemd is not defined

- name: "generate empty log file"
  file:
    path: "{{ activemq_log_dir }}"
    state: touch
    mode: "u=rw,g=r,o=r"
    owner: root
    group: root

- name: "generate /etc/sysconfig/activemq Redhat"
  template:
    src: sysconfig_activemq.j2
    dest: /etc/sysconfig/activemq
    owner: root
    group: root
    mode: 0755

- name: "generate systemd service file"
  template:
    src: activemq.service.j2
    dest: /etc/systemd/system/activemq.service
    owner: root
    group: root
  when: activemq_systemd is defined

- name: start activemq
  service:
    name: "activemq"
    state: started
  register: result

- name: locating activemq
  shell: whereis activemq | tr " " %
  register: path
  
- name: generate activemq report
  shell: "{{ playbook_dir }}/report.sh activemq {{ activemq_version }} N/A {{ path.stdout }} {{ ansible_fqdn }} success {{ inventoryname }}"
  delegate_to: localhost
  when: result|succeeded

- name: run test for activemq
  become: True
  become_user: root
  script: ./tests/activemq_test.sh
  register: activemq_test
  failed_when: "'Failed' in activemq_test.stdout"

- debug: msg="{{ activemq_test.stdout }}"
- debug: msg="{{ activemq_test.stderr }}"

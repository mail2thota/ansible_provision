---

- name: Add Kibana repository.
  template:
    src: kibana.repo.j2
    dest: /etc/yum.repos.d/kibana.repo
    mode: 0644

- name: Install Kibana.
  package: name=kibana state=present
  register: result

- name: get the version of kibana
  shell: yum list installed kibana | grep kibana | awk '{print $2}' | cut -d'-' -f1 | cut -d':' -f2
  register: version
  changed_when: False
  args:
    warn: no

- name: locating kibana
  shell: whereis kibana | tr " " %
  register: path
  
- name: generate kibana report
  shell: "{{ playbook_dir }}/report.sh kibana {{ version.stdout }} http://{{ kibana_hosts[0]['name'] }}:{{ kibana_port }} {{ path.stdout }} {{ ansible_fqdn }} success"
  delegate_to: localhost
  when: result|succeeded

- name: Ensure Kibana is started and enabled at boot.
  service:
    name: kibana
    state: started
    enabled: yes

- name: Copy Kibana configuration.
  template:
    src: kibana.yml.j2
    dest: "/etc/kibana/kibana.yml"
    owner: root
    group: root
    mode: 0644

- name: restart kibana
  service: name=kibana state=restarted

- name : check if kibana is up
  wait_for : host={{ kibana_hosts[0]['name'] }} port={{ kibana_port }} delay=5 timeout=180

- name: copy test files of kibana
  become: True
  become_user: root
  copy:
    src: ./tests/
    dest: /home/
    mode: 0777

- name: run test for kibana
  become: True
  become_user: root
  command: /home/kibana_test.sh
  register: kibana_test
  failed_when: "'Failed' in kibana_test.stdout"

- debug: msg="{{ kibana_test.stdout }}"
- debug: msg="{{ kibana_test.stderr }}"


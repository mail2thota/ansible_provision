#!/usr/bin/env python

import codecs
import os
import sys

_state = 0
_func  = []

class State(object):
    RST   = 0
    CFUNC = 1

for file_ in sys.argv[1:]:
    outfile = "%s.rst" % file_
    with codecs.open(file_, encoding="UTF-8") as in_:
        with codecs.open(outfile, mode="w", encoding="UTF-8") as out:
            try:
                line = next(in_)
                while True:
                    if _state == State.CFUNC:
                        line = "\\*".join(line.split("*"))
                    if _state == State.RST:
                        if line.startswith("// .. c:function::"):
                            _func  = []
                            _state = State.CFUNC
                        elif line.startswith("// "):
                            out.write(line[3:])
                        elif line.startswith("//"):
                            out.write(line[2:])
                        else:
                            out.write("   %s" % line)
                        line = next(in_)
                    else:
                        if line.startswith("//"):
                            func = " ".join(_func)
                            out.write(os.linesep)
                            out.write(os.linesep)
                            out.write(".. c:function:: %s" % func)
                            out.write(os.linesep)
                            _state = State.RST
                        else:
                            line2 = line.strip()
                            line2 = line2.strip(";")
                            _func.append(line2)
                            line = next(in_)
            except StopIteration:
                pass
